% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/ffm_api_functions.R
\name{ffm_create_database}
\alias{ffm_create_database}
\title{Creates a database manager object and file.}
\usage{
ffm_create_database(path, delete.existing = TRUE, use.transactions = TRUE)
}
\arguments{
\item{path}{The path for the database file}

\item{delete.existing}{If \code{TRUE} (default), any existing database file
matching \code{path} is deleted if possible; if \code{FALSE}, the database
will only be created if the file does not exist.}

\item{use.transactions}{If \code{TRUE} (default), all insertions into the database
will be done within transactions (slow but safe); if \code{FALSE},
insertions will be done directly (fast but less safe).}
}
\value{
A reference object (ScalaCachedReference) which can be 
  passed to \code{\link{ffm_run}} functions.
}
\description{
This function creates a Scala database manager (ffm.io.r.Database object),
together with an associated SQLite database file. A reference is returned
which can then be passed to \code{\link{ffm_run}} functions and used to
write model results.
}
\details{
Note that the returned object is a Scala object reference for use with
\code{\link{ffm_run}}. This is different to the more general database 
connection object used with functions in the RSQLite package.
}
